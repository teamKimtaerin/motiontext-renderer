name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    env:
      # Use PAT if available; fall back to default token
      GITHUB_TOKEN: ${{ secrets.RELEASE_PAT || secrets.GH_PAT || secrets.GITHUB_TOKEN }}
      # Make NPM token available to all steps
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Ensure git operations (branch push) use the same token
          token: ${{ secrets.RELEASE_PAT || secrets.GH_PAT || secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.0
          run_install: false

      - name: Setup Node.js with cache
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Run quality checks
        run: |
          pnpm lint
          pnpm typecheck

      - name: Build
        run: pnpm build

      - name: Assert NPM_TOKEN present
        run: |
          if [ -z "${NPM_TOKEN:-}" ]; then
            echo "::error::NPM_TOKEN is not set or empty"; exit 1;
          fi

      - name: Configure npm token (fresh .npmrc)
        run: |
          rm -f "$HOME/.npmrc"
          cat > "$HOME/.npmrc" << EOF
          registry=https://registry.npmjs.org/
          //registry.npmjs.org/:_authToken=${NPM_TOKEN}
          @kimtaerin:registry=https://registry.npmjs.org/
          //registry.npmjs.org/:always-auth=true
          EOF

      - name: Verify npm authentication
        run: |
          echo "Registry: $(npm config get registry)"
          echo "npm whoami:" && npm whoami || (echo "::error::Invalid NPM_TOKEN or npm auth failed" && exit 1)
          echo "Intended scope: @kimtaerin"

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: pnpm release
          title: 'Version Packages'
          commit: 'Version Packages'
          # Run the changesets versioning step (use npm script or direct cli)
          version: pnpm run version
        env:
          # Prefer a PAT to bypass org/repo restriction on the Actions bot creating PRs
          # Create a repo-scoped PAT (classic) with repo + pull_request write, save as RELEASE_PAT or GH_PAT
          GITHUB_TOKEN: ${{ secrets.RELEASE_PAT || secrets.GH_PAT || secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          # Ensure scoped packages are published publicly
          NPM_CONFIG_ACCESS: public
