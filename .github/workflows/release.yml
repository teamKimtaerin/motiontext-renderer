name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    env:
      # Use PAT if available; fall back to default token
      GITHUB_TOKEN: ${{ secrets.RELEASE_PAT || secrets.GH_PAT || secrets.GITHUB_TOKEN }}
      # NPM token for publish (npm/changesets recognize NODE_AUTH_TOKEN). Prefer NPM_TOKEN, fallback to NPM_AUTH_TOKEN.
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN || secrets.NPM_AUTH_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN || secrets.NPM_AUTH_TOKEN }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Ensure git operations (branch push) use the same token
          token: ${{ secrets.RELEASE_PAT || secrets.GH_PAT || secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.0
          run_install: false

      - name: Setup Node.js with cache
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          registry-url: 'https://registry.npmjs.org/'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run quality checks
        run: |
          pnpm lint
          pnpm typecheck

      - name: Build
        run: pnpm build

      - name: Configure npm auth for publish
        run: |
          rm -f "$HOME/.npmrc"
          printf "registry=https://registry.npmjs.org/\n//registry.npmjs.org/:_authToken=%s\n" "$NODE_AUTH_TOKEN" > "$HOME/.npmrc"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN || secrets.NPM_AUTH_TOKEN }}

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: pnpm release
          title: 'Version Packages'
          commit: 'Version Packages'
          # Run the changesets versioning step (use npm script or direct cli)
          version: pnpm run version
        env:
          # Prefer a PAT to bypass org/repo restriction on the Actions bot creating PRs
          # Create a repo-scoped PAT (classic) with repo + pull_request write, save as RELEASE_PAT or GH_PAT
          GITHUB_TOKEN: ${{ secrets.RELEASE_PAT || secrets.GH_PAT || secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN || secrets.NPM_AUTH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN || secrets.NPM_AUTH_TOKEN }}
          # Ensure scoped packages are published publicly (harmless for unscoped)
          NPM_CONFIG_ACCESS: public
